replicaCount: 1

backendApi:
  externalIntegrationKey: ""
  externalDownloadAPIUrl: "http://127.0.0.1:5000/api_1"
  image:
    repository: "backend-api"
    pullPolicy: Never # set to Never because local build cache is used
    tag: "latest" # same as above
  serviceAccount:
    automount: true
    annotations: {}
    name: ""
  readinessProbe:
    httpGet:
      path: /health_check
      port: 5000
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

dataApi:
  image:
    repository: "data-api"
    pullPolicy: Never # set to Never because local build cache is used
    tag: "latest" # same as above
  fluentBit:
    image:
      repository: "cr.fluentbit.io/fluent/fluent-bit"
      pullPolicy: IfNotPresent
      tag: "3.1.9"
    extraVolumeMounts:
      - name: fluent-bit-config
        mountPath: /fluent-bit/etc/fluent-bit.conf
        subPath: fluent-bit.conf
  serviceAccount:
    automount: true
    annotations: {}
    name: ""
  volumes:
    - name: data-api-config-volume
      emptyDir: {}
    - name: fluent-bit-config
      configMap:
        name: data-api-fluent-bit-config
  volumeMounts:
    - name: data-api-config-volume
      mountPath: /configured_path
  initContainerSecurityContext:
    readOnlyRootFilesystem: true
    capabilities:
      drop: ["all"]
      add: ["CHOWN"]
    runAsUser: 0
    runAsNonRoot: false
  startupProbe:
    httpGet:
      path: /
      port: 5000
    failureThreshold: 2
    periodSeconds: 10
    timeoutSeconds: 5
  readinessProbe:
    httpGet:
      path: /health_check
      port: 5000
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsUser: 65534
  runAsGroup: 65534
  fsGroup: 65534

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534

service:
  type: ClusterIP
  port: 80
  targetPort: 5000

nodeSelector: {}
tolerations: []
affinity: {}
